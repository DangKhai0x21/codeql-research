/**
 * @kind path-problem
 */

import java
import semmle.code.java.dataflow.TaintTracking
import DataFlow::PathGraph


class ContainerRequest extends Constructor{
    ContainerRequest(){
        this.hasName("ContainerRequest") and
        this.getNumberOfParameters() = 6
    }
}
class GetEntity extends Method{
    GetEntity(){
        this.hasName("getEntity") and
        this.getDeclaringType().hasQualifiedName("com.sun.jersey.spi.container", "ContainerRequest") and
        this.getNumberOfParameters() = 3
    }
}

class CompileFunction extends MethodAccess{
    CompileFunction(){
        this.getCallee().hasName("compileFunction") and
        this.getCaller().hasName("JavaScriptPredicateFactory")
       
    }
}


// class ConfigureSS extends TaintTracking::Configuration{
//     ConfigureSS(){this = "ConfigureSS"}
//     override predicate isSource(DataFlow::Node source) {
//         exists(GetEntity ge| source.asExpr() = ge))        
//     }

//     override predicate isSink(DataFlow::Node sink) {
//         exists(CompileFunction cf| sink.asExpr() = cf.getArgument(1) )
//     }
// }

class ConfigureSS extends TaintTracking::Configuration{
    ConfigureSS(){this = "ConfigureSS"}
    override predicate isSource(DataFlow::Node source) {
        exists(ContainerRequest cr| source.asParameter() = cr.getParameter(5))        
    }

    override predicate isSink(DataFlow::Node sink) {
        exists(GetEntity ge| sink.asParameter() = ge.getParameter(0))
    }
}


from ContainerRequest fpn
select fpn.getFile().getLocation()
